From cdc0cfb7eb503534c52da8edc3e29619b8e3264f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Th=C3=A1i=20Minh=20Tr=C3=AD?= <kazekagepk@gmail.com>
Date: Tue, 15 Jul 2025 01:33:17 +0700
Subject: [PATCH 2/2] TriTM Sync and optimize Manage Promotion interface; add
 Manage Order and Order Detail features.//TriTN add write feedback and page
 break of manage feedback

---
 src/FeedbackDAO.java                          | 208 ++++++++++++++++++
 src/ReplyFeedbackDAO.java                     |  95 ++++++++
 .../Controller/WriteFeedbackController.java   |  72 ++++++
 src/main/java/DAO/WriteFeedbackDAO.java       |  68 ++++++
 src/main/webapp/writeFeedback.jsp             |  79 +++++++
 src/manageFeedback.jsp                        | 204 +++++++++++++++++
 6 files changed, 726 insertions(+)
 create mode 100644 src/FeedbackDAO.java
 create mode 100644 src/ReplyFeedbackDAO.java
 create mode 100644 src/main/java/Controller/WriteFeedbackController.java
 create mode 100644 src/main/java/DAO/WriteFeedbackDAO.java
 create mode 100644 src/main/webapp/writeFeedback.jsp
 create mode 100644 src/manageFeedback.jsp

diff --git a/src/FeedbackDAO.java b/src/FeedbackDAO.java
new file mode 100644
index 0000000..0958c9c
--- /dev/null
+++ b/src/FeedbackDAO.java
@@ -0,0 +1,208 @@
+/*
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
+ */
+package DAO;
+
+import DB.DBConnection;
+import Model.Feedback;
+
+import java.sql.*;
+import java.util.ArrayList;
+import java.util.List;
+/**
+ *
+ * @author TriTN
+ */
+public class FeedbackDAO {
+
+    // Lấy feedback theo trang
+    public List<Feedback> getFeedbackByPage(int page, int limit) {
+        List<Feedback> list = new ArrayList<>();
+        String sql = "SELECT f.*, u.fullName AS userName " +
+                     "FROM Feedback f JOIN Users u ON f.userID = u.userID " +
+                     "WHERE f.isDeleted = 0 " +
+                     "ORDER BY f.feedbackID OFFSET ? ROWS FETCH NEXT ? ROWS ONLY";
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+
+            ps.setInt(1, (page - 1) * limit);
+            ps.setInt(2, limit);
+
+            ResultSet rs = ps.executeQuery();
+            while (rs.next()) {
+                list.add(mapResultToFeedback(rs));
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return list;
+    }
+
+    // Đếm tất cả feedback
+    public int countAllFeedback() {
+        String sql = "SELECT COUNT(*) FROM Feedback WHERE isDeleted = 0";
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql);
+             ResultSet rs = ps.executeQuery()) {
+            if (rs.next()) return rs.getInt(1);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return 0;
+    }
+
+    // Xóa mềm
+    public boolean softDeleteFeedback(int id) {
+        String sql = "UPDATE Feedback SET isDeleted = 1 WHERE feedbackID = ?";
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+            ps.setInt(1, id);
+            return ps.executeUpdate() > 0;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return false;
+    }
+
+    // Cập nhật trạng thái
+    public boolean updateStatus(int id, String status) {
+        String sql = "UPDATE Feedback SET status = ? WHERE feedbackID = ?";
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+            ps.setString(1, status);
+            ps.setInt(2, id);
+            return ps.executeUpdate() > 0;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return false;
+    }
+
+    // Tìm kiếm có phân trang
+    public List<Feedback> searchFeedback(String userName, String keyword, String status, String date, int page, int limit) {
+        List<Feedback> list = new ArrayList<>();
+        StringBuilder sql = new StringBuilder(
+            "SELECT f.*, u.fullName AS userName " +
+            "FROM Feedback f JOIN Users u ON f.userID = u.userID WHERE f.isDeleted = 0"
+        );
+
+        List<Object> params = new ArrayList<>();
+
+        if (userName != null && !userName.trim().isEmpty()) {
+            sql.append(" AND u.fullName LIKE ?");
+            params.add("%" + userName + "%");
+        }
+        if (keyword != null && !keyword.trim().isEmpty()) {
+            sql.append(" AND f.comment LIKE ?");
+            params.add("%" + keyword + "%");
+        }
+        if (status != null && !status.trim().isEmpty()) {
+            sql.append(" AND f.status = ?");
+            params.add(status);
+        }
+        if (date != null && !date.trim().isEmpty()) {
+            sql.append(" AND CAST(f.createdAt AS DATE) = ?");
+            params.add(Date.valueOf(date));
+        }
+
+        sql.append(" ORDER BY f.feedbackID OFFSET ? ROWS FETCH NEXT ? ROWS ONLY");
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql.toString())) {
+
+            for (int i = 0; i < params.size(); i++) {
+                ps.setObject(i + 1, params.get(i));
+            }
+
+            ps.setInt(params.size() + 1, (page - 1) * limit);
+            ps.setInt(params.size() + 2, limit);
+
+            ResultSet rs = ps.executeQuery();
+            while (rs.next()) {
+                list.add(mapResultToFeedback(rs));
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return list;
+    }
+
+    // Đếm bản ghi sau khi lọc
+    public int countFilteredFeedback(String userName, String keyword, String status, String date) {
+        StringBuilder sql = new StringBuilder(
+            "SELECT COUNT(*) FROM Feedback f JOIN Users u ON f.userID = u.userID WHERE f.isDeleted = 0"
+        );
+
+        List<Object> params = new ArrayList<>();
+
+        if (userName != null && !userName.trim().isEmpty()) {
+            sql.append(" AND u.fullName LIKE ?");
+            params.add("%" + userName + "%");
+        }
+        if (keyword != null && !keyword.trim().isEmpty()) {
+            sql.append(" AND f.comment LIKE ?");
+            params.add("%" + keyword + "%");
+        }
+        if (status != null && !status.trim().isEmpty()) {
+            sql.append(" AND f.status = ?");
+            params.add(status);
+        }
+        if (date != null && !date.trim().isEmpty()) {
+            sql.append(" AND CAST(f.createdAt AS DATE) = ?");
+            params.add(Date.valueOf(date));
+        }
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql.toString())) {
+
+            for (int i = 0; i < params.size(); i++) {
+                ps.setObject(i + 1, params.get(i));
+            }
+
+            ResultSet rs = ps.executeQuery();
+            if (rs.next()) return rs.getInt(1);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return 0;
+    }
+
+    // Dùng chung để map từ ResultSet sang Feedback
+    private Feedback mapResultToFeedback(ResultSet rs) throws SQLException {
+        Feedback fb = new Feedback();
+        fb.setFeedbackID(rs.getInt("feedbackID"));
+        fb.setUserID(rs.getInt("userID"));
+        fb.setUserName(rs.getString("userName"));
+        fb.setOrderDetailID(rs.getInt("orderDetailID"));
+        fb.setRating(rs.getInt("rating"));
+        fb.setComment(rs.getString("comment"));
+        fb.setCreatedAt(rs.getTimestamp("createdAt"));
+        fb.setStatus(rs.getString("status"));
+        fb.setDeleted(rs.getBoolean("isDeleted"));
+        return fb;
+    }
+    
+    public boolean insertFeedback(Feedback fb) {
+    String sql = "INSERT INTO Feedback (userID, orderDetailID, rating, comment, status, isDeleted, createdAt) " +
+                 "VALUES (?, ?, ?, ?, 'Pending', 0, GETDATE())";
+
+    try (Connection conn = DBConnection.getConnection();
+         PreparedStatement ps = conn.prepareStatement(sql)) {
+        ps.setInt(1, fb.getUserID());
+        ps.setInt(2, fb.getOrderDetailID());
+        ps.setInt(3, fb.getRating());
+        ps.setString(4, fb.getComment());
+        return ps.executeUpdate() > 0;
+    } catch (Exception e) {
+        e.printStackTrace();
+    }
+    return false;
+}
+
+}
diff --git a/src/ReplyFeedbackDAO.java b/src/ReplyFeedbackDAO.java
new file mode 100644
index 0000000..496ee75
--- /dev/null
+++ b/src/ReplyFeedbackDAO.java
@@ -0,0 +1,95 @@
+/*
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
+ */
+
+package DAO;
+
+import DB.DBConnection;
+import Model.ReplyFeedback;
+
+import java.sql.*;
+import java.util.ArrayList;
+import java.util.List;
+/**
+ *
+ * @author TriTN
+ */
+public class ReplyFeedbackDAO {
+
+    public List<ReplyFeedback> getRepliesByFeedbackID(int feedbackID) {
+        List<ReplyFeedback> list = new ArrayList<>();
+        String sql = "SELECT * FROM ReplyFeedback WHERE feedbackID = ? ORDER BY createdAt ASC";
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+            ps.setInt(1, feedbackID);
+            ResultSet rs = ps.executeQuery();
+
+            while (rs.next()) {
+                ReplyFeedback r = new ReplyFeedback();
+                r.setReplyID(rs.getInt("replyID"));
+                r.setFeedbackID(rs.getInt("feedbackID"));
+                r.setUserID(rs.getInt("userID"));
+                r.setReplyText(rs.getString("replyText"));
+                r.setCreatedAt(rs.getTimestamp("createdAt"));
+                list.add(r);
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return list;
+    }
+
+    public boolean insertReply(ReplyFeedback reply) {
+        String sql = "INSERT INTO ReplyFeedback (feedbackID, userID, replyText, createdAt) VALUES (?, ?, ?, GETDATE())";
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+            ps.setInt(1, reply.getFeedbackID());
+            ps.setInt(2, reply.getUserID());
+            ps.setString(3, reply.getReplyText());
+
+            return ps.executeUpdate() > 0;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return false;
+    }
+
+    public boolean updateReply(ReplyFeedback reply) {
+        String sql = "UPDATE ReplyFeedback SET replyText = ? WHERE replyID = ?";
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+            ps.setString(1, reply.getReplyText());
+            ps.setInt(2, reply.getReplyID());
+
+            return ps.executeUpdate() > 0;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return false;
+    }
+
+    public boolean deleteReply(int replyID) {
+        String sql = "DELETE FROM ReplyFeedback WHERE replyID = ?";
+
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+            ps.setInt(1, replyID);
+            return ps.executeUpdate() > 0;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return false;
+    }
+}
diff --git a/src/main/java/Controller/WriteFeedbackController.java b/src/main/java/Controller/WriteFeedbackController.java
new file mode 100644
index 0000000..3f5c9af
--- /dev/null
+++ b/src/main/java/Controller/WriteFeedbackController.java
@@ -0,0 +1,72 @@
+/*
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
+ */
+package Controller;
+
+import DAO.WriteFeedbackDAO;
+import Model.OrderDetail;
+import Model.Feedback;
+import Model.User;
+
+import jakarta.servlet.ServletException;
+import jakarta.servlet.annotation.WebServlet;
+import jakarta.servlet.http.*;
+import java.io.IOException;
+import java.util.List;
+/**
+ *
+ * @author TriTN
+ */
+
+@WebServlet("/WriteFeedback")
+public class WriteFeedbackController extends HttpServlet {
+
+    private WriteFeedbackDAO dao = new WriteFeedbackDAO();
+
+    @Override
+    protected void doGet(HttpServletRequest request, HttpServletResponse response)
+            throws ServletException, IOException {
+
+        HttpSession session = request.getSession();
+        User user = (User) session.getAttribute("user");
+
+        if (user == null) {
+            response.sendRedirect("login.jsp");
+            return;
+        }
+
+        List<OrderDetail> orders = dao.getOrderDetailsByUser(user.getUserID());
+        request.setAttribute("orders", orders);
+        request.getRequestDispatcher("writeFeedback.jsp").forward(request, response);
+    }
+
+    @Override
+    protected void doPost(HttpServletRequest request, HttpServletResponse response)
+            throws ServletException, IOException {
+
+        request.setCharacterEncoding("UTF-8");
+
+        HttpSession session = request.getSession();
+        User user = (User) session.getAttribute("user");
+
+        if (user == null) {
+            response.sendRedirect("login.jsp");
+            return;
+        }
+
+        int orderDetailID = Integer.parseInt(request.getParameter("orderDetailID"));
+        int rating = Integer.parseInt(request.getParameter("rating"));
+        String comment = request.getParameter("comment");
+
+        Feedback fb = new Feedback();
+        fb.setUserID(user.getUserID());
+        fb.setOrderDetailID(orderDetailID);
+        fb.setRating(rating);
+        fb.setComment(comment);
+
+        dao.insertFeedback(fb);
+
+        response.sendRedirect("WriteFeedback");
+    }
+}
diff --git a/src/main/java/DAO/WriteFeedbackDAO.java b/src/main/java/DAO/WriteFeedbackDAO.java
new file mode 100644
index 0000000..78dcc6e
--- /dev/null
+++ b/src/main/java/DAO/WriteFeedbackDAO.java
@@ -0,0 +1,68 @@
+/*
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
+ * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
+ */
+package DAO;
+
+import DB.DBConnection;
+import Model.Feedback;
+import Model.OrderDetail;
+
+import java.sql.*;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ *
+ * @author TriTN
+ */
+
+public class WriteFeedbackDAO {
+
+    public List<OrderDetail> getOrderDetailsByUser(int userID) {
+        List<OrderDetail> list = new ArrayList<>();
+        String sql = "SELECT od.* FROM OrderDetail od " +
+                     "JOIN OrderInfo o ON od.orderID = o.orderID " +
+                     "WHERE o.userID = ?";
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+
+            ps.setInt(1, userID);
+            ResultSet rs = ps.executeQuery();
+
+            while (rs.next()) {
+                OrderDetail od = new OrderDetail();
+                od.setOrderDetailID(rs.getInt("orderDetailID"));
+                od.setProductID(rs.getInt("productID"));
+                od.setOrderID(rs.getInt("orderID"));
+                od.setOrderName(rs.getString("orderName"));
+                od.setQuantity(rs.getInt("quantity"));
+                od.setTotalPrice(rs.getDouble("totalPrice"));
+                list.add(od);
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return list;
+    }
+
+    public boolean insertFeedback(Feedback fb) {
+        String sql = "INSERT INTO Feedback (userID, orderDetailID, rating, comment, createdAt, status, isDeleted) " +
+                     "VALUES (?, ?, ?, ?, GETDATE(), 'Pending', 0)";
+        try (Connection conn = DBConnection.getConnection();
+             PreparedStatement ps = conn.prepareStatement(sql)) {
+
+            ps.setInt(1, fb.getUserID());
+            ps.setInt(2, fb.getOrderDetailID());
+            ps.setInt(3, fb.getRating());
+            ps.setString(4, fb.getComment());
+
+            return ps.executeUpdate() > 0;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return false;
+    }
+}
diff --git a/src/main/webapp/writeFeedback.jsp b/src/main/webapp/writeFeedback.jsp
new file mode 100644
index 0000000..0e01ff3
--- /dev/null
+++ b/src/main/webapp/writeFeedback.jsp
@@ -0,0 +1,79 @@
+<%-- 
+    Document   : writeFeedback
+    Created on : Jul 3, 2025, 10:15:29 AM
+    Author     : TriTN
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<%@ page import="java.util.*, Model.OrderDetail" %>
+<%@ include file="left-sidebar.jsp" %>
+
+<%
+    List<OrderDetail> orders = (List<OrderDetail>) request.getAttribute("orders");
+    String context = request.getContextPath();
+%>
+
+<div class="content" style="margin-left: 220px; padding: 2rem;">
+    <h4>📝 Write Feedback</h4>
+
+    <% if (orders == null || orders.isEmpty()) { %>
+        <p>No order found to write feedback.</p>
+    <% } else { %>
+        <div class="row">
+            <% for (OrderDetail od : orders) { %>
+                <div class="col-md-4 mb-4">
+                    <div class="card h-100">
+                        <div class="card-body">
+                            <h5 class="card-title"><%= od.getOrderName() %></h5>
+                            <p class="card-text">Quantity: <%= od.getQuantity() %></p>
+                            <p class="card-text">Total: <%= od.getTotalPrice() %> VND</p>
+                            <button class="btn btn-primary btn-sm" data-bs-toggle="modal"
+                                    data-bs-target="#feedbackModal<%= od.getOrderDetailID() %>">
+                                Write Feedback
+                            </button>
+                        </div>
+                    </div>
+                </div>
+
+                <!-- Modal -->
+                <div class="modal fade" id="feedbackModal<%= od.getOrderDetailID() %>" tabindex="-1">
+                    <div class="modal-dialog">
+                        <div class="modal-content text-start">
+                            <form method="post" action="<%= context %>/WriteFeedback">
+                                <div class="modal-header">
+                                    <h5 class="modal-title">Feedback for: <%= od.getOrderName() %></h5>
+                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
+                                </div>
+                                <div class="modal-body">
+                                    <input type="hidden" name="orderDetailID" value="<%= od.getOrderDetailID() %>">
+                                    <div class="mb-3">
+                                        <label for="rating" class="form-label">Rating</label>
+                                        <select name="rating" class="form-select" required>
+                                            <option value="">Choose...</option>
+                                            <option value="1">★☆☆☆☆</option>
+                                            <option value="2">★★☆☆☆</option>
+                                            <option value="3">★★★☆☆</option>
+                                            <option value="4">★★★★☆</option>
+                                            <option value="5">★★★★★</option>
+                                        </select>
+                                    </div>
+                                    <div class="mb-3">
+                                        <label for="comment" class="form-label">Comment</label>
+                                        <textarea name="comment" class="form-control" rows="3" required></textarea>
+                                    </div>
+                                </div>
+                                <div class="modal-footer">
+                                    <button type="submit" class="btn btn-success">Send Feedback</button>
+                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
+                                </div>
+                            </form>
+                        </div>
+                    </div>
+                </div>
+            <% } %>
+        </div>
+    <% } %>
+</div>
+
+<!-- Bootstrap -->
+<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
diff --git a/src/manageFeedback.jsp b/src/manageFeedback.jsp
new file mode 100644
index 0000000..121fe78
--- /dev/null
+++ b/src/manageFeedback.jsp
@@ -0,0 +1,204 @@
+<%-- 
+    Document   : manageFeedback
+    Created on : Jun 16, 2025, 10:41:04 PM
+    Author     : TriTN
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<%@ page import="java.util.*, Model.Feedback, Model.ReplyFeedback, DAO.ReplyFeedbackDAO" %>
+<%@ include file="left-sidebar.jsp" %>
+
+<%
+    List<Feedback> feedbacks = (List<Feedback>) request.getAttribute("feedbacks");
+    int currentPage = (Integer) request.getAttribute("currentPage");
+    int totalPages = (Integer) request.getAttribute("totalPages");
+
+    String context = request.getContextPath();
+    String keyword = request.getParameter("keyword") == null ? "" : request.getParameter("keyword");
+    String statusFilter = request.getParameter("status") == null ? "" : request.getParameter("status");
+    String dateFilter = request.getParameter("date") == null ? "" : request.getParameter("date");
+    String userNameFilter = request.getParameter("userName") == null ? "" : request.getParameter("userName");
+
+    ReplyFeedbackDAO replyDAO = new ReplyFeedbackDAO();
+%>
+
+<div class="content" style="margin-left: 220px; padding: 2rem;">
+    <h4>📝 Manage Feedback</h4>
+
+    <!-- Filter Form -->
+    <form method="get" action="<%= context %>/Feedback" class="row g-3 mb-4">
+        <div class="col-md-3">
+            <input type="text" name="userName" class="form-control" placeholder="User Name" value="<%= userNameFilter %>">
+        </div>
+        <div class="col-md-2">
+            <input type="date" name="date" class="form-control" value="<%= dateFilter %>">
+        </div>
+        <div class="col-md-2">
+            <select name="status" class="form-select">
+                <option value="">All Status</option>
+                <option value="Pending" <%= "Pending".equals(statusFilter) ? "selected" : "" %>>Pending</option>
+                <option value="Processing" <%= "Processing".equals(statusFilter) ? "selected" : "" %>>Processing</option>
+                <option value="Resolved" <%= "Resolved".equals(statusFilter) ? "selected" : "" %>>Resolved</option>
+                <option value="Ignored" <%= "Ignored".equals(statusFilter) ? "selected" : "" %>>Ignored</option>
+            </select>
+        </div>
+        <div class="col-md-3">
+            <input type="text" name="keyword" class="form-control" placeholder="Search comment..." value="<%= keyword %>">
+        </div>
+        <div class="col-md-2">
+            <button type="submit" class="btn btn-primary w-100">Search</button>
+        </div>
+    </form>
+
+    <!-- Feedback Table -->
+    <div class="table-responsive">
+        <table class="table table-bordered text-center align-middle">
+            <thead class="table-dark">
+                <tr>
+                    <th>ID</th>
+                    <th>User</th>
+                    <th>OrderDetail ID</th>
+                    <th>Rating</th>
+                    <th style="width: 220px;">Comment</th>
+                    <th>Created At</th>
+                    <th>Status</th>
+                    <th style="width: 250px;">Action</th>
+                </tr>
+            </thead>
+            <tbody>
+                <% if (feedbacks != null && !feedbacks.isEmpty()) {
+                    for (Feedback fb : feedbacks) {
+                        List<ReplyFeedback> replies = replyDAO.getRepliesByFeedbackID(fb.getFeedbackID());
+                %>
+                <tr>
+                    <td><%= fb.getFeedbackID() %></td>
+                    <td><%= fb.getUserName() %></td>
+                    <td><%= fb.getOrderDetailID() %></td>
+                    <td><%= fb.getRating() %></td>
+                    <td class="text-start" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
+                        <%= fb.getComment().split("\\s+").length > 10
+                            ? String.join(" ", Arrays.copyOfRange(fb.getComment().split("\\s+"), 0, 10)) + "..."
+                            : fb.getComment() %>
+                    </td>
+                    <td><%= fb.getCreatedAt() %></td>
+                    <td>
+                        <form method="get" action="<%= context %>/Feedback" class="d-inline">
+                            <input type="hidden" name="action" value="updateStatus">
+                            <input type="hidden" name="id" value="<%= fb.getFeedbackID() %>">
+                            <select name="status" onchange="this.form.submit()" class="form-select form-select-sm">
+                                <option value="Pending" <%= "Pending".equals(fb.getStatus()) ? "selected" : "" %>>Pending</option>
+                                <option value="Processing" <%= "Processing".equals(fb.getStatus()) ? "selected" : "" %>>Processing</option>
+                                <option value="Resolved" <%= "Resolved".equals(fb.getStatus()) ? "selected" : "" %>>Resolved</option>
+                                <option value="Ignored" <%= "Ignored".equals(fb.getStatus()) ? "selected" : "" %>>Ignored</option>
+                            </select>
+                        </form>
+                    </td>
+                    <td>
+                        <a href="<%= context %>/Feedback?action=delete&id=<%= fb.getFeedbackID() %>" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure to delete this feedback?')">Delete</a>
+                        <% if (fb.getComment().split("\\s+").length > 10) { %>
+                        <button class="btn btn-info btn-sm mt-1" data-bs-toggle="modal" data-bs-target="#commentModal<%= fb.getFeedbackID() %>">View more</button>
+                        <% } %>
+                        <button class="btn btn-success btn-sm mt-1" data-bs-toggle="modal" data-bs-target="#replyModal<%= fb.getFeedbackID() %>">Reply</button>
+                    </td>
+                </tr>
+
+                <% if (replies != null && !replies.isEmpty()) { %>
+                <tr class="table-warning">
+                    <td colspan="8" class="text-start ps-4">✅ Admin replied.</td>
+                </tr>
+                <% } %>
+
+                <!-- View More Modal -->
+                <div class="modal fade" id="commentModal<%= fb.getFeedbackID() %>" tabindex="-1">
+                    <div class="modal-dialog modal-dialog-centered modal-lg">
+                        <div class="modal-content text-start">
+                            <div class="modal-header">
+                                <h5 class="modal-title">Full Comment</h5>
+                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
+                            </div>
+                            <div class="modal-body"><%= fb.getComment().trim() %></div>
+                        </div>
+                    </div>
+                </div>
+
+                <!-- Reply Modal -->
+                <div class="modal fade" id="replyModal<%= fb.getFeedbackID() %>" tabindex="-1">
+                    <div class="modal-dialog modal-dialog-centered modal-lg">
+                        <div class="modal-content text-start">
+                            <div class="modal-header">
+                                <h5 class="modal-title">Reply to Feedback #<%= fb.getFeedbackID() %></h5>
+                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
+                            </div>
+                            <div class="modal-body">
+                                <div class="border rounded p-3 mb-3" style="background-color: #f8f9fa; max-height: 300px; overflow-y: auto;">
+                                    <p><strong><%= fb.getUserName() %>:</strong> <%= fb.getComment() %></p>
+                                    <hr>
+                                    <% for (ReplyFeedback r : replies) { %>
+                                    <form method="post" action="<%= context %>/ReplyFeedback" class="mb-2">
+                                        <input type="hidden" name="replyID" value="<%= r.getReplyID() %>">
+                                        <div class="d-flex justify-content-between align-items-start">
+                                            <textarea name="replyText" class="form-control me-2" rows="2"><%= r.getReplyText() %></textarea>
+                                            <div>
+                                                <button type="submit" name="action" value="update" class="btn btn-sm btn-warning me-1">Edit</button>
+                                                <button type="submit" name="action" value="delete" class="btn btn-sm btn-danger" onclick="return confirm('Delete this reply?')">Delete</button>
+                                            </div>
+                                        </div>
+                                        <p class="text-muted small mb-1"><%= r.getCreatedAt() %></p>
+                                    </form>
+                                    <% } %>
+                                </div>
+
+                                <form method="post" action="<%= context %>/ReplyFeedback">
+                                    <input type="hidden" name="feedbackID" value="<%= fb.getFeedbackID() %>">
+                                    <textarea name="replyText" class="form-control" rows="3" required placeholder="Enter reply..."></textarea>
+                                    <div class="modal-footer p-0 mt-3">
+                                        <button type="submit" class="btn btn-primary">Send Reply</button>
+                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
+                                    </div>
+                                </form>
+                            </div>
+                        </div>
+                    </div>
+                </div>
+                <% } // end for %>
+                <% } else { %>
+                <tr><td colspan="8">No feedback found.</td></tr>
+                <% } %>
+            </tbody>
+        </table>
+
+        <!-- Pagination -->
+        <%
+            String baseLink = context + "/Feedback?";
+            StringBuilder query = new StringBuilder();
+
+            if (!userNameFilter.isEmpty()) query.append("userName=").append(userNameFilter).append("&");
+            if (!keyword.isEmpty()) query.append("keyword=").append(keyword).append("&");
+            if (!statusFilter.isEmpty()) query.append("status=").append(statusFilter).append("&");
+            if (!dateFilter.isEmpty()) query.append("date=").append(dateFilter).append("&");
+
+            baseLink += query.toString();
+        %>
+
+        <nav class="mt-4">
+            <ul class="pagination justify-content-center">
+                <li class="page-item <%= currentPage == 1 ? "disabled" : "" %>">
+                    <a class="page-link" href="<%= baseLink %>page=<%= currentPage - 1 %>">Previous</a>
+                </li>
+
+                <% for (int i = 1; i <= totalPages; i++) { %>
+                <li class="page-item <%= i == currentPage ? "active" : "" %>">
+                    <a class="page-link" href="<%= baseLink %>page=<%= i %>"><%= i %></a>
+                </li>
+                <% } %>
+
+                <li class="page-item <%= currentPage == totalPages ? "disabled" : "" %>">
+                    <a class="page-link" href="<%= baseLink %>page=<%= currentPage + 1 %>">Next</a>
+                </li>
+            </ul>
+        </nav>
+    </div>
+</div>
+
+<!-- Bootstrap CDN -->
+<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
-- 
2.49.0.windows.1

